---
# create_user task
user_name: rabbitmq
user_uid: 999
user_group_name: rabbitmq
user_gid: 999

hostname: "{{ groups['rabbitmq'][0] }}"

# Certbot
certbot_admin_email: security@usegalaxy.eu
certbot_agree_tos: --agree-tos
certbot_auth_method: --webroot
certbot_auto_renew: true
certbot_auto_renew_user: root
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_domains:
  - "{{ hostname }}"
certbot_environment: production # staging change to production when ready to go
certbot_install_method: virtualenv
certbot_share_key_users:
  - nginx
  - rabbitmq

certbot_post_renewal: |
  systemctl restart nginx || true
  systemctl restart docker || true
certbot_virtualenv_package_name: python3-virtualenv
certbot_virtualenv_command: virtualenv
certbot_well_known_root: /srv/nginx/_well-known_root

# NGINX
nginx_enable_default_server: false
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - rabbitmq-ssl
nginx_remove_default_vhost: true

# Nginx Letsencrypt bindings
nginx_ssl_role: usegalaxy-eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

# RabbitMQ (passwords are vault encrypted in ./secret_group_vars/rabbitmq.yml)
rabbitmq_users:
  - user: mqadmin
    password: "{{ rabbitmq_users_password.mqadmin }}"
    tags: administrator
    vhost: /
  - user: galaxy
    password: "{{ rabbitmq_users_password.galaxy }}"
    vhost: galaxy
  - user: pulsar_it01
    password: "{{ rabbitmq_users_password.pulsar_it01 }}"
    vhost: /pulsar/pulsar_it01
  - user: pulsar_it03
    password: "{{ rabbitmq_users_password.pulsar_it03 }}"
    vhost: /pulsar/pulsar_it03

rabbitmq_plugins:
  - rabbitmq_management

rabbitmq_config:
  consumer_timeout: 21600000 # 6 hours in milliseconds
  listeners:
    tcp: none
  ssl_listeners:
    default: 5671
  ssl_options:
    cacertfile: /etc/ssl/certs/fullchain.pem
    certfile: /etc/ssl/certs/cert.pem
    keyfile: /etc/ssl/user/privkey-rabbitmq.pem
    verify: verify_peer
    fail_if_no_peer_cert: "false"
  management_agent:
    disable_metrics_collector: "false"
  management:
    disable_stats: "false"

rabbitmq_container:
  name: rabbit_hole
  image: rabbitmq:3-management
    #hostname: rabbitmq
  hostname: "{{ groups['rabbitmq'][0] }}"

rabbitmq_container_pause: 60

# Redis
redis_port: 6379
redis_bind_interface: 0.0.0.0
redis_rdbcompression: "yes"
redis_dbfilename: dump.rdb
redis_dbdir: /var/lib/redis
redis_loglevel: "notice"
redis_logfile: /var/log/redis/redis-server.log
redis_conf_path: /etc/redis

# Telegraf
# telegraf_plugins_extra:
#   prometheus:
#     plugin: prometheus
#     config:
#       - urls = ["http://172.17.0.2:15692/metrics"]

