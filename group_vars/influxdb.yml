---
docker_users:
  - "{{ ansible_ssh_user }}"
# influxdb
influxdb_https_enabled: "true"

influxdb_users:
  admin:
    - {username: "{{ influxdb.admin.username }}", password: "{{ influxdb.admin.password }}"}
  regular:
    - {username: "{{ influxdb.grafana.username }}", password: "{{ influxdb.grafana.password }}"}
    - {username: "{{ influxdb.node.username }}", password: "{{ influxdb.node.password }}"}
influxdb_data_dir: /data/monitoring/influxdb_data # TODO

influxdb_databases:
  - galaxy
  - grt
  - galaxy_stats
  - notifications
# TODO: Rework of the databases needed and their organization


influxdb_container_standalone_setup_details:
  volumes:
    - "{{ influxdb_data_dir }}:/var/lib/influxdb"
    - "/etc/pki/tls/certs:/etc/ssl/certs/"
    - "/etc/ssl/user:/etc/ssl/user"
  ports:
    - 8086:8086
  env:
    {
      'INFLUXDB_HTTP_AUTH_ENABLED': "true",
      'INFLUXDB_HTTP_ENABLED': "true",
      'INFLUXDB_HTTP_HTTPS_ENABLED': "{{ influxdb_https_enabled }}",
      'INFLUXDB_HTTP_HTTPS_CERTIFICATE': "/etc/ssl/certs/fullchain.pem",
      'INFLUXDB_HTTP_HTTPS_PRIVATE_KEY': "/etc/ssl/user/privkey-influxdb.pem",
      'INFLUXDB_HTTP_LOG_ENABLED': "false",
      'INFLUXDB_DATA_INDEX_VERSION': "tsi1",
      'INFLUXDB_DATA_CACHE_MAX_MEMORY_SYZE': '1048576000', # TODO
      'INFLUXDB_DATA_CACHE_SNAPSHOT_WRITE_COLD_DURATION': "10s",
      'INFLUXDB_DATA_MAX_VALUES_PER_TAG': '3000000',
      'INFLUXDB_LOGGING_LEVEL': "error"
    }
# see:
# https://docs.influxdata.com/influxdb/v1.8/administration/config/

# create user task
handy_groups:
  - group_name: influxdb
    group_gid: 999

handy_users:
  - user_name: influxdb
    user_uid: 999
    user_group: influxdb

# Certbot
certbot_admin_email: usegalaxy.it@gmail.it
certbot_agree_tos: --agree-tos
certbot_auth_method: --webroot
certbot_auto_renew: true
certbot_auto_renew_user: root
certbot_auto_renew_hour: "{{ 23 | random(seed=inventory_hostname) }}"
certbot_auto_renew_minute: "{{ 59 | random(seed=inventory_hostname) }}"
certbot_domains:
  - "{{ hostname }}"
certbot_environment: "production"    # change to production when ready to go
certbot_install_method: virtualenv
certbot_share_key_users:
  - nginx
  - influxdb

certbot_post_renewal: |
    systemctl restart nginx || true
    systemctl restart docker || true
certbot_virtualenv_package_name: python3-virtualenv
certbot_virtualenv_command: virtualenv
certbot_well_known_root: /srv/nginx/_well-known_root

# NGINX
nginx_enable_default_server: false
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - influxdb-ssl
nginx_remove_default_vhost: true

# Nginx Letsencrypt bindings # TODO
nginx_ssl_role: usegalaxy-eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

firewall_public_services:
  - http
  - https
  - influxdb # must be created in playbook
firewall_internal_services:
  - http
  - https
  - ssh
  - influxdb
