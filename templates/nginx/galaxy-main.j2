map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

upstream galaxy {
	{% for n in range(galaxy_systemd_gunicorns) %}
    	server unix:{{ galaxy_mutable_data_dir }}/{{ galaxy_systemd_gunicorn_socket_name }}_{{ n }}.sock;
	{% endfor %}
}

server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;

	error_page 404 /404.html;
	error_page 502 /502.html;
	error_page 503 /503.html;
	error_page 504 /503.html;

	location /404.html {
		root /usr/share/nginx/html;
		internal;
	}
	location /502.html {
		root /usr/share/nginx/html;
		internal;
	}
	location /503.html {
		root /usr/share/nginx/html;
		internal;
	}
	location /504.html {
		root /usr/share/nginx/html;
		internal;
	}

	client_body_buffer_size 1024m;

	location / {
		# This is the backend to send the requests to.
		proxy_pass http://galaxy;
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;

		# Throttle downloads. First 100Mb are free, after that 5Mb/s.
		# users can move to FTP if they need / we can sort that out.
		limit_rate_after 100m;
		limit_rate 5m;


		add_header X-Clacks-Overhead 'GNU James Taylor (@jxtx) Simon Gladman (@slugger70)';
	}
	location ~ ^/api/dataset_collections/([^/]+)/download/?$ {
		proxy_buffering off;
		proxy_pass http://galaxy;
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Upgrade $http_upgrade;
	}

	location /_x_accel_redirect {
		internal;
		alias /;
		add_header X-Frame-Options SAMEORIGIN;
		add_header X-Content-Type-Options nosniff;

		# CORS
		if ($http_origin ~ "^https?://(covid19map\.elixir-luxembourg\.org|www\.bx\.psu\.edu)$") {
			add_header Access-Control-Allow-Origin $http_origin;
			add_header Access-Control-Allow-Methods 'GET';
			add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
			add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
		}
	}


	location /api/upload/resumable_upload {
		# Disable request and response buffering
		proxy_request_buffering  off;
		proxy_buffering          off;
		proxy_http_version       1.1;

		# Add X-Forwarded-* headers
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Proto  $scheme;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         "upgrade";
        client_max_body_size        0;
        proxy_pass http://localhost:{{ galaxy_tusd_port }}/files;
	}

	location /phinch {
		root /opt;
	}


	location /static {
		alias {{ galaxy_server_dir }}/static;
		expires 24h;
	}

	location /static/welcome.html {
		alias {{ galaxy_server_dir }}/static/welcome.html;
		expires 24h;
	}

	location /static/style {
		alias {{ galaxy_server_dir }}/static/style;
		expires 24h;
	}

	location /robots.txt {
		alias {{ galaxy_server_dir }}/static/robots.txt;
	}

	location ~ ^/plugins/(?<plug_type>[^/]+?)/((?<vis_d>[^/_]*)_?)?(?<vis_name>[^/]*?)/static/(?<static_file>.*?)$ {
		alias {{ galaxy_server_dir }}/config/plugins/$plug_type/;
		try_files $vis_d/${vis_d}_${vis_name}/static/$static_file
		          $vis_d/static/$static_file =404;
	}

	# Global GIE configuration
	location /gie_proxy {
		proxy_pass http://127.0.0.1:8800/gie_proxy;
		proxy_redirect off;
	}

	# Project Jupyter specific. Other IEs may require their own routes.
	location ~ ^/gie_proxy/jupyter/(?<nbtype>[^/]+)/api/kernels(?<rest>.*?)$ {
		proxy_pass http://127.0.0.1:8800/gie_proxy/jupyter/$nbtype/api/kernels$rest;
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	location /favicon.ico {
		alias {{ galaxy_server_dir }}/static/favicon.ico;
	}


	location /.well-known/ {
		proxy_set_header           Host $host:$server_port;
		proxy_set_header           X-Real-IP $remote_addr;
		proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header           X-Forwarded-Proto $scheme;
		proxy_pass                 http://127.0.0.1:8118;
		proxy_pass_request_headers on;
	}

	{{ gapars_nginx_config }}

	location /external/phdcomics/ {
		proxy_pass http://phdcomics.com/;
		# The comics are extremely cacheable. No sense waiting for a server from USA to respond.
		proxy_cache           STATIC;
		proxy_cache_valid     200  10d;
		proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
	}

	# For GTN in Galaxy Webhook
	location /training-material/ {
		proxy_pass https://training.galaxyproject.org/training-material/;
	}

	resolver 8.8.8.8 8.8.4.4 valid=300s;
	resolver_timeout 5s;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none;

	client_max_body_size 1G; # aka max upload size, defaults to 1M
}
